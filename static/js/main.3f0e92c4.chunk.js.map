{"version":3,"sources":["components/GridItem.js","components/Modal.js","views/Main.js","App.js","serviceWorker.js","index.js"],"names":["GridItemDiv","Object","styled_base_browser_esm","target","props","hovered","firstrow","firstcolumn","lastcolumn","lastrow","GridItem","state","_this2","this","_this$props","handleItemClick","children","react_default","a","createElement","onClick","onTouchStart","e","preventDefault","setState","onTouchEnd","onMouseEnter","onMouseLeave","Component","ModalBackdrop","opened","ModalBody","Title","name","styles","ResultsIcon","concat","src","Results","Level","even","LevelSpan","RestartButton","RestartGraphic","AttemptsContainer","AttemptWrapper","Attempt","Checkmark","modalRoot","document","getElementById","Modal","el","appendChild","removeChild","levels","restart","createPortal","keys","map","level","key","parseInt","stages","stage","type","description","Parent","InfoContainer","LevelContainer","LevelTitle","StagesTitle","StageContainer","Stage","Grid","rows","columns","Target","getRandomInt","max","Math","floor","random","Main","currentLevel","0","currentStage","1","2","3","4","isModalShown","getTotalItems","_this","index","_ref","length","objectSpread","defineProperty","resetGrid","showModal","_this$state","items","_loop","i","_loop2","j","push","components_GridItem","Helmet","content","property","rel","href","Main_Level","Main_AttemptsContainer","Main_Attempt","Main_Checkmark","Main_RestartButton","components_Modal","App","views_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f0e92c4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"@emotion/styled/macro\";\n\nconst GridItemDiv = styled.div`\n  position: relative;\n  border: ${props =>\n    props.hovered\n      ? \"12px solid rgba(200, 189, 171, 1)\"\n      : \"8px solid rgba(200, 189, 171, 1)\"};\n  background-color: ${props =>\n    props.hovered ? \"rgba(200, 189, 171, 0.4)\" : \"rgba(200, 189, 171, 0.2)\"};\n  margin-left: -8px;\n  margin-bottom: -8px;\n  transition: all 0.2s ease;\n  border-top-left-radius: ${props =>\n    props.firstrow && props.firstcolumn ? \"5px\" : \"0\"};\n  border-top-right-radius: ${props =>\n    props.firstrow && props.lastcolumn ? \"5px\" : \"0\"};\n  border-bottom-left-radius: ${props =>\n    props.lastrow && props.firstcolumn ? \"5px\" : \"0\"};\n  border-bottom-right-radius: ${props =>\n    props.lastrow && props.lastcolumn ? \"5px\" : \"0\"};\n  touch-action: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nclass GridItem extends Component {\n  state = {\n    hovered: false\n  };\n\n  render() {\n    const {\n      firstrow,\n      lastrow,\n      firstcolumn,\n      lastcolumn,\n      handleItemClick,\n      children\n    } = this.props;\n    const { hovered } = this.state;\n\n    return (\n      <GridItemDiv\n        firstrow={firstrow}\n        lastrow={lastrow}\n        firstcolumn={firstcolumn}\n        lastcolumn={lastcolumn}\n        onClick={handleItemClick}\n        onTouchStart={e => {\n          e.preventDefault();\n          this.setState({ hovered: true });\n        }}\n        onTouchEnd={e => {\n          e.preventDefault();\n          this.setState({ hovered: false }, handleItemClick);\n        }}\n        onMouseEnter={() => this.setState({ hovered: true })}\n        onMouseLeave={() => this.setState({ hovered: false })}\n        hovered={hovered}\n      >\n        {children}\n      </GridItemDiv>\n    );\n  }\n}\n\nexport default GridItem;\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport { createPortal } from \"react-dom\";\n\nconst ModalBackdrop = styled.div`\n  background-color: ${props =>\n    props.opened ? \"rgba(0, 0, 0, 0.5)\" : \"rgba(0, 0, 0, 0)\"};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 1s ease;\n  pointer-events: ${props => (props.opened ? \"auto\" : \"none\")};\n`;\n\nconst ModalBody = styled.div`\n  background-color: rgba(250, 238, 216, 1);\n  border-radius: 5px;\n  min-width: 700px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  transform: ${props =>\n    props.opened ? \"translate3d(0, 0, 0)\" : \"translate3d(0, 100px, 0)\"};\n  opacity: ${props => (props.opened ? \"1\" : \"0\")};\n  transition: transform 0.8s ease, opacity 0.8s ease;\n`;\n\nconst Title = styled.div`\n  font-size: 3rem;\n  letter-spacing: 0.04em;\n  font-weight: 800;\n  text-transform: uppercase;\n  color: rgba(0, 0, 0, 0.2);\n  background-color: rgba(200, 189, 171, 1);\n  padding: 1.5em 1em 0.5em 1em;\n  width: 100%;\n  display: flex;\n  align-items: flex-end;\n`;\n\nconst ResultsIcon = styled.div`\n  background-image: ${props => `url(${props.src})`};\n  background-position: left bottom;\n  background-repeat: no-repeat;\n  background-size: contain;\n  height: 1.5em;\n  width: 1.5em;\n  margin-right: 0.1em;\n`;\n\nconst Results = styled.div`\n  width: 100%;\n`;\n\nconst Level = styled.div`\n  text-transform: uppercase;\n  padding: 0 3em;\n  background-color: ${props =>\n    props.even ? \"transparent\" : \"rgba(200, 189, 171, 0.15)\"};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst LevelSpan = styled.span`\n  font-size: 2rem;\n  letter-spacing: 0.04em;\n  font-weight: 800;\n  text-transform: uppercase;\n  color: rgba(200, 189, 171, 1);\n  padding: 1em 0;\n`;\n\nconst RestartButton = styled.button`\n  background-color: rgba(200, 189, 171, 0.5);\n  color: #a09789;\n  padding: 0.5em 0;\n  width: calc(100% - 3em);\n  display: flex;\n  justify-content: center;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  user-select: none;\n  text-decoration: none;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  font-weight: 800;\n  border-radius: 5px;\n  font-size: 2rem;\n  letter-spacing: 0.04em;\n  margin: 1em 0;\n\n  &:hover {\n    background-color: rgba(200, 189, 171, 0.8);\n  }\n`;\n\nconst RestartGraphic = styled.div`\n  background-image: ${props => `url(${props.src})`};\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  height: 1.2em;\n  width: 1.2em;\n  margin-right: 0.3em;\n  margin-top: -0.2em;\n`;\n\nconst AttemptsContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n`;\n\nconst AttemptWrapper = styled.div`\n  position: relative;\n  width: 40px;\n  height: 40px;\n  margin-left: 0.6em;\n`;\n\nconst Attempt = styled.div`\n  position: absolute;\n  width: 10px;\n  height: 45px;\n  background-color: #ff6f6f;\n  transform: rotate3d(0, 0, 1, 45deg);\n  border-radius: 0.125em;\n  transition: all 0.2s ease;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 10px;\n    height: 45px;\n    background-color: #ff6f6f;\n    transform: rotate3d(0, 0, 1, 90deg);\n    border-radius: 0.125em;\n    transition: all 0.2s ease;\n  }\n`;\n\nconst Checkmark = styled.div`\n  position: absolute;\n  width: 10px;\n  height: 40px;\n  background-color: #96d796;\n  transform: rotate3d(0, 0, 1, 35deg);\n  border-radius: 0.125em;\n  transition: all 0.2s ease;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n  margin-left: 1.4em;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 20px;\n    height: 10px;\n    background-color: #96d796;\n    border-radius: 0.125em;\n    transition: all 0.2s ease;\n    bottom: 0;\n    right: 0;\n  }\n`;\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nclass Modal extends Component {\n  el = document.createElement(\"div\");\n\n  componentDidMount() {\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    const { levels, restart, opened } = this.props;\n\n    return createPortal(\n      <ModalBackdrop opened={opened}>\n        <ModalBody opened={opened}>\n          <Title>\n            <ResultsIcon src=\"/graphics/results.svg\" />\n            Results\n          </Title>\n          <Results>\n            {Object.keys(levels).map(level => (\n              <Level key={level} even={level % 2 === 0}>\n                <LevelSpan>Level {parseInt(level) + 1}</LevelSpan>\n                <AttemptsContainer>\n                  {Object.keys(levels[level].stages).map(stage => (\n                    <AttemptWrapper key={stage}>\n                      {levels[level].stages[stage] === \"passed\" ? (\n                        <Checkmark />\n                      ) : (\n                        <Attempt />\n                      )}\n                    </AttemptWrapper>\n                  ))}\n                </AttemptsContainer>\n              </Level>\n            ))}\n          </Results>\n          <RestartButton type=\"button\" onClick={restart}>\n            <RestartGraphic src=\"/graphics/restart.svg\" />\n            Start Again\n          </RestartButton>\n        </ModalBody>\n      </ModalBackdrop>,\n      this.el\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport { Helmet } from \"react-helmet\";\n\nimport GridItem from \"../components/GridItem\";\nimport Modal from \"../components/Modal\";\n\nconst description =\n  \"An application that accesses a person's ability to recognize a moving target.\";\n\nconst Parent = styled.div`\n  position: relative;\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  margin: 0 auto;\n  height: 28vh;\n  background-color: rgba(200, 189, 171, 1);\n`;\n\nconst LevelContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst LevelTitle = styled.span`\n  font-size: 2.5rem;\n  letter-spacing: 0.04em;\n  font-weight: 800;\n  text-transform: uppercase;\n  color: rgba(0, 0, 0, 0.2);\n`;\n\nconst Level = styled.span`\n  font-size: 7rem;\n  letter-spacing: 0.0175em;\n  font-weight: 800;\n  color: rgba(250, 238, 216, 1);\n`;\n\nconst StagesTitle = styled.span`\n  font-size: 2.5rem;\n  letter-spacing: 0.04em;\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst AttemptsContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n`;\n\nconst StageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: rgba(0, 0, 0, 0.2);\n`;\n\nconst Stage = styled.div`\n  background-color: rgba(0, 0, 0, 0.1);\n  height: 6.25em;\n  width: 5em;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:not(:last-child) {\n    margin-right: 1.25em;\n  }\n`;\n\nconst Attempt = styled.div`\n  position: relative;\n  width: 15px;\n  height: 67.5px;\n  background-color: #ff6f6f;\n  transform: rotate3d(0, 0, 1, 45deg);\n  border-radius: 0.125em;\n  transition: all 0.2s ease;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 15px;\n    height: 67.5px;\n    background-color: #ff6f6f;\n    transform: rotate3d(0, 0, 1, 90deg);\n    border-radius: 0.125em;\n    transition: all 0.2s ease;\n  }\n`;\n\nconst Checkmark = styled.div`\n  position: relative;\n  width: 15px;\n  height: 60px;\n  background-color: #96d796;\n  transform: rotate3d(0, 0, 1, 35deg);\n  border-radius: 0.125em;\n  transition: all 0.2s ease;\n  margin-left: 1em;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 30px;\n    height: 15px;\n    background-color: #96d796;\n    border-radius: 0.125em;\n    transition: all 0.2s ease;\n    bottom: 0;\n    right: 0;\n  }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 72vh;\n  justify-content: center;\n  align-content: center;\n  grid-template: repeat(${props => props.rows}, 90px) / repeat(\n      ${props => props.columns},\n      90px\n    );\n  user-select: none;\n`;\n\nconst Target = styled.div`\n  position: absolute;\n  height: 50px;\n  width: 50px;\n  background-color: rgba(200, 189, 171, 1);\n  border-radius: 50%;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n`;\n\nconst RestartButton = styled.div`\n  background-image: ${props => `url(${props.src})`};\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  height: 3em;\n  width: 3em;\n  cursor: pointer;\n  user-select: none;\n  opacity: 0.8;\n  transition: all 0.2s ease;\n  position: absolute;\n  right: 2em;\n  bottom: 1.8em;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nclass Main extends Component {\n  state = {\n    currentLevel: 0,\n    levels: {\n      0: {\n        rows: 3,\n        columns: 3,\n        currentStage: 0,\n        stages: {\n          0: \"unknown\",\n          1: \"unknown\",\n          2: \"unknown\",\n          3: \"unknown\",\n          4: \"unknown\"\n        }\n      },\n      1: {\n        rows: 4,\n        columns: 6,\n        currentStage: 0,\n        stages: {\n          0: \"unknown\",\n          1: \"unknown\",\n          2: \"unknown\",\n          3: \"unknown\",\n          4: \"unknown\"\n        }\n      },\n      2: {\n        rows: 5,\n        columns: 9,\n        currentStage: 0,\n        stages: {\n          0: \"unknown\",\n          1: \"unknown\",\n          2: \"unknown\",\n          3: \"unknown\",\n          4: \"unknown\"\n        }\n      },\n      3: {\n        rows: 7,\n        columns: 9,\n        currentStage: 0,\n        stages: {\n          0: \"unknown\",\n          1: \"unknown\",\n          2: \"unknown\",\n          3: \"unknown\",\n          4: \"unknown\"\n        }\n      }\n    },\n    target: null,\n    isModalShown: false\n  };\n\n  componentDidMount() {\n    this.setState({ target: getRandomInt(this.getTotalItems(0)) });\n  }\n\n  getTotalItems = level => {\n    const { levels } = this.state;\n\n    return levels[level].rows * levels[level].columns;\n  };\n\n  handleItemClick = index => {\n    this.setState(({ currentLevel, levels, target }) => ({\n      currentLevel:\n        currentLevel !== Object.keys(levels).length - 1 &&\n        levels[currentLevel].currentStage ===\n          Object.keys(levels[currentLevel].stages).length - 1\n          ? currentLevel + 1\n          : currentLevel,\n      levels: {\n        ...levels,\n        [currentLevel]: {\n          ...levels[currentLevel],\n          currentStage: levels[currentLevel].currentStage + 1,\n          stages: {\n            ...levels[currentLevel].stages,\n            [levels[currentLevel].currentStage]:\n              target === index ? \"passed\" : \"failed\"\n          }\n        }\n      },\n      target:\n        currentLevel === Object.keys(levels).length - 1 &&\n        levels[currentLevel].currentStage ===\n          Object.keys(levels[currentLevel].stages).length - 1\n          ? target\n          : getRandomInt(this.getTotalItems(currentLevel)),\n      isModalShown:\n        currentLevel === Object.keys(levels).length - 1 &&\n        levels[currentLevel].currentStage ===\n          Object.keys(levels[currentLevel].stages).length - 1\n          ? true\n          : false\n    }));\n  };\n\n  resetGrid = () => {\n    this.setState({\n      currentLevel: 0,\n      levels: {\n        0: {\n          rows: 3,\n          columns: 3,\n          currentStage: 0,\n          stages: {\n            0: \"unknown\",\n            1: \"unknown\",\n            2: \"unknown\",\n            3: \"unknown\",\n            4: \"unknown\"\n          }\n        },\n        1: {\n          rows: 4,\n          columns: 6,\n          currentStage: 0,\n          stages: {\n            0: \"unknown\",\n            1: \"unknown\",\n            2: \"unknown\",\n            3: \"unknown\",\n            4: \"unknown\"\n          }\n        },\n        2: {\n          rows: 5,\n          columns: 9,\n          currentStage: 0,\n          stages: {\n            0: \"unknown\",\n            1: \"unknown\",\n            2: \"unknown\",\n            3: \"unknown\",\n            4: \"unknown\"\n          }\n        },\n        3: {\n          rows: 7,\n          columns: 9,\n          currentStage: 0,\n          stages: {\n            0: \"unknown\",\n            1: \"unknown\",\n            2: \"unknown\",\n            3: \"unknown\",\n            4: \"unknown\"\n          }\n        }\n      },\n      target: getRandomInt(this.getTotalItems(0)),\n      isModalShown: false\n    });\n  };\n\n  showModal = () => {\n    this.setState({ isModalShown: true });\n  };\n\n  render() {\n    const { currentLevel, levels, target, isModalShown } = this.state;\n\n    let items = [];\n\n    for (let i = 0; i < levels[currentLevel].rows; i++) {\n      for (let j = 0; j < levels[currentLevel].columns; j++) {\n        items.push(\n          <GridItem\n            key={j * levels[currentLevel].rows + i}\n            firstrow={i === 0}\n            lastrow={i === levels[currentLevel].rows - 1}\n            firstcolumn={j === 0}\n            lastcolumn={j === levels[currentLevel].columns - 1}\n            handleItemClick={() =>\n              this.handleItemClick(j * levels[currentLevel].rows + i)\n            }\n          >\n            {target === j * levels[currentLevel].rows + i ? <Target /> : null}\n          </GridItem>\n        );\n      }\n    }\n\n    return (\n      <Parent>\n        <Helmet>\n          <title>Grid Therapy</title>\n          <meta name=\"description\" content={description} />\n          <meta content={description} property=\"og:description\" />\n          <link\n            rel=\"canonical\"\n            href=\"https://chanmatthew.github.io/grid-therapy/\"\n          />\n        </Helmet>\n        <InfoContainer>\n          <LevelContainer>\n            <LevelTitle>Level</LevelTitle>\n            <Level>{currentLevel + 1}</Level>\n          </LevelContainer>\n          <StageContainer>\n            <StagesTitle>Stages</StagesTitle>\n            <AttemptsContainer>\n              {Object.keys(levels[currentLevel].stages).map(stage => (\n                <Stage key={stage}>\n                  {levels[currentLevel].stages[stage] === \"failed\" ? (\n                    <Attempt />\n                  ) : levels[currentLevel].stages[stage] === \"passed\" ? (\n                    <Checkmark />\n                  ) : null}\n                </Stage>\n              ))}\n            </AttemptsContainer>\n          </StageContainer>\n        </InfoContainer>\n        <Grid\n          rows={levels[currentLevel].rows}\n          columns={levels[currentLevel].columns}\n        >\n          {items}\n        </Grid>\n        <RestartButton src=\"/graphics/restart.svg\" onClick={this.resetGrid} />\n        <Modal levels={levels} restart={this.resetGrid} opened={isModalShown} />\n      </Parent>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"./views/Main\";\n\nconst App = () => <Main />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}